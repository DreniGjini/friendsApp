services:
  api_gateway:
    build: ./api-gateway
    ports: 
      - "8080:8080"
    volumes: 
      - ./api-gateway/src:/usr/src/app/src
    command: npm run start:dev
    environment: 
      - PORT=8080

  users_service:
    build: ./users-service
    volumes:
      - ./users-service/src:/usr/src/app/src
    command: npm run start:dev

  notifications_service:
    build: ./notifications-service
    volumes:
      - ./notifications-service/src:/usr/src/app/src
    command: npm run start:dev

  friends_service:
    build: ./friends-service
    volumes:
      - ./friends-service/src:/usr/src/app/src
    command: npm run start:dev

  schema_service:
    build: ./schema-service
    container_name: data-service
    depends_on:
      - postgres
    volumes:
      - ./schema-service/src:/usr/src/app/src
    command:  npm run start:dev
    environment:
      - DATABASE_URL=postgresql://postgres:secret@postgres:5432/mg-db

  status_service:
    build: ./status-service
    volumes:
      - ./status-service/src:/usr/src/app/src
    command: npm run start:dev

  nats:
    image: nats
    ports:
      - 4222:4222

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - postgres:/var/lib/postgresql/data

volumes:
  postgres:
    name: assignment-db
 