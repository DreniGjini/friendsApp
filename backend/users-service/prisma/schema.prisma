datasource db {
  provider = "postgresql" 
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id               String        @id @default(uuid())
  name             String
  imgUrl           String?
  username         String        @unique
  email            String        @unique
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  statuses         Status[]
  sentRequests     Friend[]  @relation("requesterFriends")
  receivedRequests Friend[]  @relation("addresseeFriends")
  notifications    Notification[]
}

model Friend {
  id           String      @id @default(uuid())
  requesterId  String
  addresseeId  String
  status       FriendRequestStatus   
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  requester    User @relation("requesterFriends", fields: [requesterId], references: [id])
  addressee    User @relation("addresseeFriends", fields: [addresseeId], references: [id])
}

model Status {
  id        String      @id @default(uuid())
  userId    String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
}

model Notification {
  id        String      @id @default(uuid())
  userId    String
  type      NotificationType   
  message   String
  status    NotificationStatus   
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}


enum FriendRequestStatus {
  PENDING
  ACCEPTED
  REJECTED
  BLOCKED
}

enum NotificationStatus {
  UNREAD
  READ
}

enum NotificationType {
  FRIEND_REQUEST
  STATUS_UPDATE
}